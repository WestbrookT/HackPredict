We all go to the University of Manitoba which is a commuter university, and carpool with an exact schedule everyday. Coordinating this can sometimes be challenging. For example, in the past year, "here Lorenzo" turned into "Goals Lore Zo" and "coming for you Kieran" turned into "coming for us Kerry". We wanted a solution that was automatic and would alert us of where we were, and what was going on, without having to lift a finger.
Diamond Lane is a hands off communication platform for existing, recurring carpools. It allows you to register with a carpool (or create one and invite others) and receive notifications when carpool-related events occur. For example, on a carpool day, a driver will be notified through a push notification. This driver will be chosen based on the past history of who has driven. Once the driver leaves their house, a notification will be sent to everyone involved in the carpool. At this time, if they open the app, they can see everyone's location in real time. Finally, as the driver begins to pick people up, notifications are dispatched so everyone is in the loop until ultimately everyone has been accounted for.
We initially started with setting up a database and server component on Amazon's EC2 cloud platform. From there, we integrated the API into our application and created the interface. Our application was written using native Objective-C.
We did not anticipate how many edge cases were involved through coordinating carpools. Although our app worked with the major use cases, we encountered difficulty when trying to figure out how to account for changes in pickup locations among other events. We also struggled to find a system to notify the driver and maintain that state throughout multiple applications.
We're really stoked to have been able to build and provision a server entirely from scratch, build a full scale API and database layer, and ultimately a reasonably well featured front end application in just 36 hours. With more polish, it's reasonable that the application could be 
Working as a team and iterating quickly is difficult. Through Hack The North we grew by being able to experiment with and learn about version control. We also were able to experience a nearly full product development cycle including refactoring, struggling to implement features, deadlines, and more.
We hope to be able to polish the application to the point where we can use it in our daily lives, and save time for ourselves.