Battlegrounds is a multiplayer third-person/top-down battle arena, designed for comfortable VR play. The mechanics are simple: small teams of 4+ players fight each other with a limited set of weapons and power ups on a small map.
Battlegrounds is unique in many ways; notably, this is an interesting take on what a game like Counter-Strike might be like if they were designed for VR. A key feature is multiplayer. Most VR experiences are singleplayer and isolating. With Battlegrounds, playing in VR with friends can be an exhilarating Social VR experience.
I've started the competition by focusing on programming the networking stack (that's my area of expertise) and not any gameplay or art. That's mostly done now. Players can host or join a server, move around, shoot, and everything is synced properly. I haven't tested over the Internet, but it works great on the local network.
For the next week, I'm going to focus on gameplay mechanics such as deaths, respawns, and UI elements, as well as basic level design. I'll be also focused on testing latency and performance issues as well. The plan is to have the game work seamlessly on several VR headsets (DK2, GearVR, and maybe Cardboard).
Basic gameplay mechanics (motion, gamepad input, logic, animations, death/respawn) are done! I also have some basic assets in place, but didn't do any level design work (I still need to decide on a theme) - that's next.
Also, changed the name to "Battlegrounds" though that might change again :-)
The next week is dedicated to art, so I plan to buy a bunch of models & props, and work on level design. I should probably find some time to do audio work as well. I'm hoping to have most of the game done by the next milestone, so I can leave the final week for testing and improvements.
I was scared I wouldn't be able to meet my goals, but surprisingly, I did! A basic level has been made, with some awesome military themed artwork and animations. Much of the locomotion problems have been solved, so the next week is left to polishing, re-integrating various pieces, and testing!
It's been an insanely fun ride dealing with performance optimization. The game currently runs at nearly 200fps on a 5 year old GPU, with just 30 draw calls and baked lighting.
Obviously, the level design so far is very rudimentary. I plan to finish a simple, small map, designed for mostly forward movement. My testing has revealed that turning backwards to shoot at people behind you can be really uncomfortable. Level design is the way to deal with this constraint.
I need to reintegrate much of the multiplayer code, and test it over networks for reliability and scale. I also need to work on basic sound effects, a GUI, a basic menu system, and some game mechanics like win scenarios, respawn locations, powerup drops etc.
Tons of work left!