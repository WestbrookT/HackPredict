The problem our team is trying to solve with Evicda is puzzlement. Although puzzlement can be caused by trivial matters, it could also be caused by serious issues. Examples of these serious issues being "How do I pay taxes?" and "My friend just lost their mom yesterday, should I talk to them or wait?" 
Our app addresses this problem by allowing people to ask or answer questions in a convenient way. Other Q&A apps (and especially websites) require you to go back into them to find the answer to your questions. For our app, we decided to make this more convenient for the user by having their answers get received through text/SMS. We also did not add an email requirement for question askers or answerers. We felt this was really important for the question askers as they should be able to ask what they want without worrying about their online identity. The intended user-base for our app is teenagers, we expect other teenagers to come across the most issues and as a result will ask the most questions.
The challenges we ran into with building Evicda were mainly fusion table errors. These reason these occurred is because we knew nothing about fusion tables when starting Evicda, but after a while we feel like we've almost mastered it. Then we came across random crashes on our app. When the app crashes, the user is most likely brought back to the previous page and is able to try again. We also came across other fusion table errors at the last minute, however these errors are only stopping the user from getting their response. We plan on fixing these issues in the very near future. 
Our next step for Evicda is finding out how to implement security procedures. The plan we have in mind is adding a reCaptcha entry, but we fear there will probably be something else needed. If we need to, for the added sense of commitment and less chance of there being security issues, we might put Evicda on the Play Store for $.99. We realized half way through the project that the reason app developers add the email requirement is for keeping bots away, but we plan on using new methods to get the same results and absolutely avoiding emails. After we figure out security, we plan on going back to fix up Evicda by finding out why these crashes and errors are showing up.
What we've learned is that we need to work much more than we did if we want the app to be perfect. We were able to get the app fully functional at 3 hours a week, but if we worked outside of our club meetings, the app would have been completely finished 3 months ago. We also learned that although fusion tables sound and seem cool, they are very sensitive and require everything to be perfect. We might move on to the program Firebase for future projects.