Inspired by ubiquity of networked smart devices and the internet of things, we wanted to create an intuitive way to control connected devices that's unintrusive in the user's home, dorm, or office. A device that is invisible when not in use, immediately recognizable when active, and user-friendly
Leveraging Leap motion gestures to track the user's hands and to turn any surface into a projected touchscreen, the display can be set up less than two feet away from a wall or desk to connect to the user's existing network of smart devices. For our demonstration, we configured a series of Adafruit LEDs to be controlled by an Arduino Uno. Changes made in CtrlHub's light management environment are then broadcast to the Arduino over serial communications, resulting in a range of dynamic behaviors in a number of output devices.
The build consisted of the construction of a mechanical system designed to hold both the mini-projector and the Leap Motion sensor about two feet off the ground. With only 24 hours to construct the system, the materials at hand were limited so cardboard turned out to be our best option. We designed a mechanical system that has two freestanding posts of varying distances from one another. Within each base there is weight to prevent the posts from falling towards each other. We implemented a rail system very similar to a parallel linear rail setup without linear roller bearings. Sliding on these rails is a little 'train' that carries the projector and leap motion to allow for dynamic positioning of the interactive surface.
The build was immensely challenging. Most of the obstacles came after we had all the pieces constructed, even with a modular approach to this problem. Implementing the linear rail, for example, required many different prototypes, most of which failed. The weight of the actual 'train' was just too much for all the materials we had until the following morning. 
We had never developed for Leap motion before so it was a considerable learning experience for the whole team.
Despite our experience with Python and PyGame, GUI and app development posed an immense challenge.
Come check out our working prototype of the light and music modules at the expo!
Won the Rockwell Automation Environmental Award
In an ideal world with more than 24 hours to prototype the system, CtrlCore would be fully integrated with the API of a number of other smarthome systems, like Nest thermostats, Amazon Echo voice-activated assistants, and Phillips Hue smart LED lights.